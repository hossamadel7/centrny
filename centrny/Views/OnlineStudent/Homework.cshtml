@using Microsoft.Extensions.Localization
@using System.Globalization
@model centrny.Controllers.OnlineStudentController.StudentDashboardViewModel
@inject IStringLocalizerFactory LocalizerFactory
@{
    var Localizer = LocalizerFactory.Create("OnlineStudent", System.Reflection.Assembly.GetExecutingAssembly().GetName().Name);
    var culture = CultureInfo.CurrentUICulture;
    var isArabic = culture.TwoLetterISOLanguageName == "ar";
    var htmlLang = culture.TwoLetterISOLanguageName;
    var htmlDir = isArabic ? "rtl" : "ltr";
    Layout = null;

    var rootName = Model?.Student?.RootCodeNavigation?.RootName ?? "-";
    var studentName = Model?.Student?.StudentName ?? "";
    var yearName = Model?.Student?.YearCodeNavigation?.YearName ?? Localizer["NotAssigned"];
    var branchName = Model?.Student?.BranchCodeNavigation?.BranchName ?? Localizer["NotAssigned"];
    int? studentCode = Model?.Student?.StudentCode;
}
<!DOCTYPE html>
<html lang="@htmlLang" dir="@htmlDir">
<head>
    <meta charset="utf-8" />
    <title>@(Localizer["Title_Homework"].ResourceNotFound ? "Homework" : Localizer["Title_Homework"])</title>
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    @if (isArabic)
    {
        <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/css/bootstrap.rtl.min.css" rel="stylesheet" />
    }
    else
    {
        <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/css/bootstrap.min.css" rel="stylesheet" />
    }
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" rel="stylesheet" />

    <!-- Theme CSS -->
    <link href="~/css/OnlineStudent.css" rel="stylesheet" />
    <style>
        <style >
        html, body {
            margin: 0;
            padding: 0;
        }

        /* Ensure the navbar sticks to the top without any space above it */
        .navbar, .modern-navbar {
            margin-top: 0 !important;
            border-top: 0 !important;
        }

        /* Check if there is any extra space caused by wrappers */
        .dashboard-container {
            margin-top: 0 !important;
            padding-top: 0 !important;
        }
    </style>
   
</head>
<body>
    <!-- Hidden anti-forgery token for AJAX logout -->
    <div id="afTokenContainer" style="display:none;">
        @Html.AntiForgeryToken()
    </div>

    <!-- Localization dataset for OnlineStudent.js (Homework) -->
    <div id="js-online-localization"
         data-badge-regular="@Localizer["Badge_Regular"]"
         data-nav-dashboard="@Localizer["Nav_Dashboard"]"
         data-nav-learning="@Localizer["Nav_LearningCenter"]"
         data-nav-homework="@Localizer["Nav_Homework"]"
         data-assignments="@Localizer["Assignments"]"
         data-available-videos="@Localizer["Available_Videos"]"
         data-downloadable-files="@Localizer["Downloadable_Files"]"
         data-loading-homework="@Localizer["Loading_Homework"]"
         data-loading-assignments="@Localizer["Loading_Assignments"]"
         data-loading-videos="@Localizer["Loading_Videos"]"
         data-loading-downloads="@Localizer["Loading_Downloads"]"
         data-no-assignments="@Localizer["NoAssignments"]"
         data-no-assignments-msg="@Localizer["NoAssignmentsMsg"]"
         data-no-videos="@Localizer["NoVideos"]"
         data-no-videos-msg="@Localizer["NoVideosMsg"]"
         data-no-files="@Localizer["NoFiles"]"
         data-no-files-msg="@Localizer["NoFilesMsg"]"
         data-empty-no-subjects-title="@Localizer["Empty_NoSubjectsTitle"]"
         data-empty-no-subjects-message="@Localizer["Empty_NoSubjectsMessage"]"
         data-attend-assignment="@Localizer["Attend_Assignment"]"
         data-attended="@Localizer["Attended"]"
         data-watch-video="@Localizer["Watch_Video"]"
         data-download="@Localizer["Download"]"
         data-error="@Localizer["Error"]"
         data-failed-load-assignments="@Localizer["Failed_Load_Assignments"]"
         data-failed-load-videos="@Localizer["Failed_Load_Videos"]"
         data-failed-load-downloads="@Localizer["Failed_Load_Downloads"]"
         data-locale="@htmlLang"
         data-dir="@htmlDir"></div>

    <!-- Navbar (matches dashboard/learning theme) -->
    <nav class="navbar navbar-expand-lg modern-navbar">
        <div class="container-fluid px-4">
            <a class="navbar-brand" href="/OnlineStudent">
                <i class="fas fa-graduation-cap"></i>
                @rootName
            </a>
            <!-- Keep toggler simple; JS will open the custom sidebar -->
            <button class="navbar-toggler" type="button" aria-label="Open navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav @(!isArabic ? "me-auto" : "ms-auto")">
                    <li class="nav-item">
                        <a class="nav-link" href="/OnlineStudent">
                            <i class="fas fa-tachometer-alt"></i>
                            @Localizer["Nav_Dashboard"]
                        </a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/OnlineStudent/Learning">
                            <i class="fas fa-book-reader"></i>
                            @Localizer["Nav_LearningCenter"]
                        </a>
                    </li>
                    <li class="nav-item">
                        <span class="nav-link active">
                            <i class="fas fa-clipboard-check"></i>
                            @Localizer["Nav_Homework"]
                        </span>
                    </li>
                </ul>
                <div class="language-switcher d-flex align-items-center gap-2">
                    <button class="language-btn @(isArabic ? "" : "active")" onclick="switchLanguage('en')">
                        <i class="fas fa-globe"></i> EN
                    </button>
                    <button class="language-btn @(isArabic ? "active" : "")" onclick="switchLanguage('ar')">
                        <i class="fas fa-globe"></i> AR
                    </button>
                    <button class="language-btn logout-btn" onclick="logoutStudent()" title="@Localizer["Logout"]" aria-label="@Localizer["Logout"]">
                        <i class="fas fa-right-from-bracket"></i>
                    </button>
                </div>
            </div>
        </div>
    </nav>

    <!-- Mobile overlay + sidebar (same as dashboard/learning) -->
    <div class="mobile-nav-overlay" onclick="closeMobileNav()"></div>
    <div class="mobile-nav-sidebar">
        <div class="mobile-nav-header">
            <a href="/OnlineStudent" class="mobile-nav-brand">
                <i class="fas fa-graduation-cap me-2"></i>
                @rootName
            </a>
            <button class="mobile-nav-close" onclick="closeMobileNav()">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <div class="mobile-nav-links">
            <a href="/OnlineStudent" class="mobile-nav-link">
                <i class="fas fa-tachometer-alt"></i>
                @Localizer["Nav_Dashboard"]
            </a>
            <a href="/OnlineStudent/Learning" class="mobile-nav-link">
                <i class="fas fa-book-reader"></i>
                @Localizer["Nav_LearningCenter"]
            </a>
            <a href="javascript:void(0)" class="mobile-nav-link active">
                <i class="fas fa-clipboard-check"></i>
                @Localizer["Nav_Homework"]
            </a>
        </div>
        <div class="mobile-language-switcher">
            <div class="mobile-language-title">@Localizer["Label_Language"]</div>
            <div class="mobile-language-options">
                <button class="language-btn @(isArabic ? "" : "active")" onclick="switchLanguage('en')">English</button>
                <button class="language-btn @(isArabic ? "active" : "")" onclick="switchLanguage('ar')">العربية</button>
                <button class="language-btn logout-btn mt-2" onclick="logoutStudent()">
                    <i class="fas fa-right-from-bracket"></i> @Localizer["Logout"]
                </button>
            </div>
        </div>
    </div>

    <div class="dashboard-container">
        <div id="alertContainer" class="alert-container"></div>

        @if (Model?.Student != null)
        {
            <div class="student-header mb-4">
                <div class="row">
                    <div class="col-md-8">
                        <h1 class="page-title">
                            <i class="fas fa-user-graduate"></i>
                            @studentName
                        </h1>
                        <div class="student-meta">
                            @if (studentCode.HasValue)
                            {
                                <span class="badge bg-primary">ID: @studentCode</span>
                            }
                            <span class="text-light">
                                @yearName - @branchName
                            </span>
                        </div>
                    </div>
                 
                </div>
            </div>
        }

        <div class="section-card">
            <div class="section-header">
                <h2 class="section-title">
                    <i class="fas fa-clipboard-check"></i>
                    @Localizer["Nav_Homework"]
                </h2>
            </div>
            <div class="section-content">
                <!-- JS will render per-subject homework blocks here -->
                <div id="homeworkContainer">
                    <div class="loading-spinner">
                        <div class="spinner"></div>
                        <span>@(Localizer["Loading_Homework"].ResourceNotFound ? "Loading homework..." : Localizer["Loading_Homework"])</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // If brand title is '-', try to fetch it
        document.addEventListener('DOMContentLoaded', () => {
            const brandEls = document.querySelectorAll('.navbar-brand, .mobile-nav-brand');
            const currentRoot = '@rootName';
            if (!currentRoot || currentRoot === '-' || currentRoot === '') {
                fetch('/OnlineStudent/GetStudentInfo')
                    .then(r => r.json())
                    .then(d => {
                        if (d && d.rootName) {
                            brandEls.forEach(el => {
                                const icon = el.querySelector('i');
                                if (icon) {
                                    el.innerHTML = icon.outerHTML + ' ' + d.rootName;
                                } else {
                                    el.textContent = d.rootName;
                                }
                            });
                        }
                    })
                    .catch(() => { });
            }

            // Update subscription badge on this page (since dashboard loader isn't run here)
            try {
                fetch('/OnlineStudent/GetSubscriptionStatus')
                    .then(r => r.json())
                    .then(sub => {
                        const badge = document.getElementById('subscription-status');
                        if (!badge || sub?.error) return;
                        const isSub = !!sub.isSubscribed;
                        badge.textContent = isSub ? '@Localizer["Badge_Subscribed"]' : '@Localizer["Badge_Regular"]';
                        badge.className = `badge ${isSub ? 'bg-success' : 'bg-secondary'}`;
                    })
                    .catch(() => {});
            } catch {}

            // Navbar toggler opens the custom mobile sidebar only
            const toggler = document.querySelector('.navbar-toggler');
            if (toggler) {
                toggler.addEventListener('click', (e) => {
                    e.preventDefault();
                    e.stopPropagation();
                    if (window.innerWidth < 992) {
                        openMobileNav();
                    }
                }, true);
            }
        });

        function switchLanguage(lang) {
            document.cookie = ".AspNetCore.Culture=c=" + lang + "|uic=" + lang + "; path=/; max-age=31536000";
            location.reload();
        }
        function closeMobileNav() {
            document.querySelector('.mobile-nav-sidebar')?.classList.remove('open');
            document.querySelector('.mobile-nav-overlay')?.classList.remove('show');
            document.body.classList.remove('mobile-nav-open');
        }
        async function logoutStudent() {
            try {
                const token = document.querySelector('input[name="__RequestVerificationToken"]')?.value || '';
                const res = await fetch('/StudentLogin/Logout', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': token
                    },
                    body: '{}'
                });
                const data = await res.json().catch(() => null);
                if (res.ok && data?.success) {
                    window.location.href = data.redirectUrl || '/StudentLogin';
                } else {
                    alert(data?.error || 'Logout failed. Please try again.');
                }
            } catch (e) {
                alert('Network error. Please try again.');
            }
        }
        // Sidebar helpers
        function openMobileNav() {
            document.querySelector('.mobile-nav-sidebar')?.classList.add('open');
            document.querySelector('.mobile-nav-overlay')?.classList.add('show');
            document.body.classList.add('mobile-nav-open');
        }
    </script>

    <!-- App JS -->
    <script src="~/js/OnlineStudent.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>