@using Microsoft.Extensions.Localization
@inject IStringLocalizerFactory LocalizerFactory

@{
    var Localizer = LocalizerFactory.Create("Schedule", System.Reflection.Assembly.GetExecutingAssembly().GetName().Name);
    ViewData["Title"] = Localizer["Title_ScheduleCalendar"];
}

<!-- Localization helper for JS -->
<div id="js-localization"
     data-center="@Localizer["Lbl_Center"]"
     data-branch="@Localizer["Label_Branch"]"
     data-teacher="@Localizer["Label_Teacher"]"
     data-subject="@Localizer["Label_Subject"]"
     data-year="@Localizer["Label_Year"]"
     data-edit-schedule="@Localizer["Btn_Edit"]"
     data-create-new-schedule-btn="@Localizer["Title_AddNewSchedule"]"
     data-save-schedule-btn="@Localizer["Btn_SaveSchedule"]"
     data-cancel-btn="@Localizer["Btn_Cancel"]"
     data-schedule-name="@Localizer["Label_ScheduleName"]"
     data-day="@Localizer["Label_DayOfWeek"]"
     data-time="@Localizer["Label_StartTime"]"
     data-type="@Localizer["Label_Type"]"
     data-hall="@Localizer["Label_Hall"]"
     data-center-branch="@Localizer["Label_CenterBranch"]"
     data-teacher-subject="@Localizer["Label_TeacherSubject"]"
     data-amount="@Localizer["Label_Amount"]"
     data-actions="@Localizer["Label_Actions"]"
     data-sunday="@Localizer["Day_Sunday"]"
     data-monday="@Localizer["Day_Monday"]"
     data-tuesday="@Localizer["Day_Tuesday"]"
     data-wednesday="@Localizer["Day_Wednesday"]"
     data-thursday="@Localizer["Day_Thursday"]"
     data-friday="@Localizer["Day_Friday"]"
     data-saturday="@Localizer["Day_Saturday"]"
     data-select-day-option="@Localizer["Dropdown_SelectDay"]"
     data-select-center-option="@Localizer["Dropdown_SelectCenterOptional"]"
     data-select-branch-option="@Localizer["Dropdown_SelectBranchOptional"]"
     data-select-hall-option="@Localizer["Dropdown_SelectHallOptional"]"
     data-select-year-option="@Localizer["Dropdown_SelectYearOptional"]"
     data-select-teacher-option="@Localizer["Dropdown_SelectTeacher"]"
     data-select-subject-option="@Localizer["Dropdown_SelectSubjectOptional"]"
     data-dropdown-all-teachers="@Localizer["Dropdown_AllTeachers"]"
     data-dropdown-all-branches="@Localizer["Dropdown_AllBranches"]"
     data-dropdown-all-years="@Localizer["Dropdown_AllYears"]"
     data-dropdown-no-teachers="@Localizer["Dropdown_NoTeachers"]"
     data-btn-clear-filters="@Localizer["Btn_ClearFilters"]"
     data-label-branch-filter="@Localizer["Label_BranchFilter"]"
     data-label-teacher-filter="@Localizer["Label_TeacherFilter"]"
     data-label-year-filter="@Localizer["Label_YearFilter"]"
     data-loading-schedules="@Localizer["Loading_Schedules"]"
     data-lbl-active-filters="@Localizer["Lbl_ActiveFilters"]"
     data-lbl-no-schedules="@Localizer["Lbl_NoSchedules"]"
     data-tooltip-add-schedule-for-day="@Localizer["Tooltip_AddScheduleForDay"]"
     data-tooltip-add-new-schedule="@Localizer["Tooltip_AddNewSchedule"]"
     data-btn-list-view="@Localizer["Btn_ListView"]"
     data-btn-close="@Localizer["Btn_Close"]"
     data-btn-edit="@Localizer["Btn_Edit"]"
     data-btn-delete="@Localizer["Btn_Delete"]"
     data-title-schedule-details="@Localizer["Title_ScheduleDetails"]"
     data-title-confirm-delete="@Localizer["Title_ConfirmDelete"]"
     data-lbl-warning="@Localizer["Lbl_Warning"]"
     data-msg-delete-warning="@Localizer["Msg_DeleteWarning"]"
     data-btn-delete-schedule="@Localizer["Btn_DeleteSchedule"]"
     data-toast-calendar-loaded="@Localizer["Toast_CalendarLoaded"]"></div>

<link href='https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/6.1.8/index.min.css' rel='stylesheet' />
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet" />
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />
<link href="~/css/Calendar.css" rel="stylesheet" />

<div class="schedule-page">
    <div class="calendar-container">
        <!-- Page Header -->
        <div class="page-header">
            <h1><i class="fas fa-calendar-week me-3"></i>@Localizer["Header_WeeklySchedule"]</h1>
            <p>@Localizer["Description_WeeklySchedule"]</p>
        </div>

        @if (ViewBag.Error == null)
        {
            <a href="@Url.Action("Index")" class="btn-modern btn-info">
                <i class="fas fa-list"></i> @Localizer["Btn_ListView"]
            </a>

            <!-- Enhanced Filter Section with Branch, Teacher, and Year -->
            <div class="filter-section mb-4">
                <div class="row g-3">
                    @if (ViewBag.IsCenter == true && ViewBag.GroupBranchCode == null)
                    {
                        <div class="col-md-3">
                            <label for="branchFilter" class="form-label">
                                <i class="fas fa-building me-2"></i>@Localizer["Label_BranchFilter"]
                            </label>
                            <select id="branchFilter" class="form-select" onchange="onBranchFilterChanged()">
                                <option value="">@Localizer["Dropdown_AllBranches"]</option>
                                @if (ViewBag.Branches != null)
                                {
                                    foreach (dynamic branch in ViewBag.Branches)
                                    {
                                        <option value="@branch.value">@branch.text</option>
                                    }
                                }
                            </select>
                        </div>
                    }

                    <!-- Teacher Filter -->
                    <div class="col-md-3">
                        <label for="teacherFilter" class="form-label">
                            <i class="fas fa-user-tie me-2"></i>@Localizer["Label_TeacherFilter"]
                        </label>
                        <select id="teacherFilter" class="form-select" onchange="onTeacherFilterChanged()">
                            <option value="">@Localizer["Dropdown_AllTeachers"]</option>
                        </select>
                    </div>

                    <!-- Year Filter -->
                    <div class="col-md-3">
                        <label for="yearFilter" class="form-label">
                            <i class="fas fa-graduation-cap me-2"></i>@Localizer["Label_YearFilter"]
                        </label>
                        <select id="yearFilter" class="form-select" onchange="onYearFilterChanged()">
                            <option value="">@Localizer["Dropdown_AllYears"]</option>
                        </select>
                    </div>

                    <!-- Clear Filters Button -->
                    <div class="col-md-3 d-flex align-items-end">
                        <button type="button" class="btn btn-outline-secondary w-100" onclick="clearAllFilters()">
                            <i class="fas fa-times me-2"></i>@Localizer["Btn_ClearFilters"]
                        </button>
                    </div>
                </div>

              

                <!-- Active Filters Display -->
                <div class="active-filters mt-3" id="activeFiltersDisplay" style="display: none;">
                    <small class="text-muted">@Localizer["Lbl_ActiveFilters"]</small>
                    <div class="d-flex flex-wrap gap-2 mt-1" id="activeFilterTags"></div>
                </div>
            </div>

            <!-- Custom Weekly Template Grid -->
            <div class="weekly-template-grid" style="position: relative;">
                <div class="loading-overlay" id="initialLoader">
                    <div class="spinner"></div>
                </div>

                <div class="days-grid">
                    @foreach (var day in new[] { "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" })
                    {
                        <div class="day-column" data-day="@day">
                            <div class="day-header">@Localizer[$"Day_{day}"]</div>
                            <div class="day-content" id="day-@day">
                                <div class="empty-day">@Localizer["Lbl_NoSchedules"]</div>
                                <button class="add-schedule-btn" onclick="addScheduleForDay('@day')" title="@Localizer["Tooltip_AddScheduleForDay", Localizer[$"Day_{day}"]]">
                                    <i class="fas fa-plus"></i>
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

@if (ViewBag.Error == null)
{
    <!-- Floating Add Button -->
    <button class="floating-add-btn" data-bs-toggle="modal" data-bs-target="#scheduleModal" title="@Localizer["Tooltip_AddNewSchedule"]">
        <i class="fas fa-plus"></i>
    </button>

    <!-- Main Schedule Modal (Create/Edit) -->
    <div class="modal fade schedule-modal" id="scheduleModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header" id="scheduleModalHeader">
                    <h5 class="modal-title" id="scheduleModalTitle">
                        <i class="fas fa-calendar-plus me-2"></i>@Localizer["Title_AddNewSchedule"]
                        @if (ViewBag.UserRootName != null)
                        {
                            <small class="text-muted">@Localizer["Lbl_ForUser", ViewBag.UserRootName]</small>
                        }
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div id="scheduleForm">
                        @* User context info in form - Only for Center Users *@
                        @if (ViewBag.CurrentUserRootCode != null && ViewBag.IsCenter == true)
                        {
                            <div class="alert alert-info mb-3">
                                <i class="fas fa-info-circle me-2"></i>
                                <strong>@Localizer["Lbl_Note"]</strong>
                                @Localizer["Msg_ScheduleForUser", ViewBag.UserRootName]
                                ( @Localizer["Lbl_Center"] - @Localizer["Lbl_RootCode"]: @ViewBag.CurrentUserRootCode )
                                @if (ViewBag.BranchName != null)
                                {
                                    <span> @Localizer["Lbl_At"] <strong>@ViewBag.BranchName</strong></span>
                                }
                                <br>
                                <small class="text-muted">@Localizer["Msg_CenterAutoAssign"]</small>
                            </div>
                        }

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label">@Localizer["Label_ScheduleName"] *</label>
                                <input type="text" class="form-control" id="scheduleName" required placeholder="@Localizer["Placeholder_ScheduleName"]">
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label">@Localizer["Label_DayOfWeek"] *</label>
                                <select class="form-select" id="dayOfWeek" required>
                                    <option value="">@Localizer["Dropdown_SelectDay"]</option>
                                    @foreach (var day in new[] { "Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday" })
                                    {
                                        <option value="@day">@Localizer[$"Day_{day}"]</option>
                                    }
                                </select>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label">@Localizer["Label_StartTime"] *</label>
                                <input type="time" class="form-control" id="startTime" required>
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label">@Localizer["Label_EndTime"] *</label>
                                <input type="time" class="form-control" id="endTime" required>
                            </div>
                        </div>

                        <!-- Root is hidden and auto-set -->
                        <input type="hidden" id="rootCode" value="@ViewBag.CurrentUserRootCode">

                        <!-- Center and Branch dropdowns - Updated for both user types -->
                        <div class="row">
                            @if (ViewBag.IsCenter == true && ViewBag.GroupBranchCode == null)
                            {
                                <input type="hidden" id="centerCode" value="@ViewBag.SingleCenterCode">

                                <div class="col-md-6 mb-3">
                                    <label class="form-label">@Localizer["Label_Branch"]</label>
                                    <select class="form-select" id="branchCode" onchange="loadHallsForBranch()">
                                        <option value="">@Localizer["Dropdown_SelectBranchOptional"]</option>
                                    </select>
                                    <small class="text-muted">@Localizer["Msg_SelectBranchForSchedule"]</small>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">@Localizer["Label_EducationalYear"]</label>
                                    <select class="form-select" id="eduYearCode">
                                        <option value="">@Localizer["Dropdown_SelectYearOptional"]</option>
                                        @if (ViewData["EduYearCode"] != null)
                                        {
                                            @foreach (var item in (Microsoft.AspNetCore.Mvc.Rendering.SelectList)ViewData["EduYearCode"])
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        }
                                    </select>
                                </div>
                            }
                            else if (ViewBag.IsCenter == true && ViewBag.GroupBranchCode != null)
                            {
                                <input type="hidden" id="centerCode" value="@ViewBag.SingleCenterCode">
                                <input type="hidden" id="branchCode" name="branchCode" value="@ViewBag.GroupBranchCode" />
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">@Localizer["Label_Branch"]</label>
                                    <input type="text" class="form-control" value="@ViewBag.BranchName" disabled />
                                    <small class="text-muted">@Localizer["Msg_AutoAssignedBranch"]</small>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">@Localizer["Label_EducationalYear"]</label>
                                    <select class="form-select" id="eduYearCode">
                                        <option value="">@Localizer["Dropdown_SelectYearOptional"]</option>
                                        @if (ViewData["EduYearCode"] != null)
                                        {
                                            @foreach (var item in (Microsoft.AspNetCore.Mvc.Rendering.SelectList)ViewData["EduYearCode"])
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        }
                                    </select>
                                </div>
                            }
                            else
                            {
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">@Localizer["Label_Center"]</label>
                                    <select class="form-select" id="centerCode" onchange="loadBranchesForCenter()">
                                        <option value="">@Localizer["Dropdown_SelectCenterOptional"]</option>
                                        @if (ViewData["CenterCode"] != null)
                                        {
                                            @foreach (var item in (Microsoft.AspNetCore.Mvc.Rendering.SelectList)ViewData["CenterCode"])
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">@Localizer["Label_Branch"]</label>
                                    <select class="form-select" id="branchCode" onchange="loadHallsForBranch()">
                                        <option value="">@Localizer["Dropdown_SelectCenterFirst"]</option>
                                    </select>
                                </div>
                            }
                        </div>

                        <!-- Halls row - separate for both user types -->
                        <div class="row">
                            @if (ViewBag.IsCenter == true)
                            {
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">@Localizer["Label_Hall"]</label>
                                    <select class="form-select" id="hallCode">
                                        <option value="">@Localizer["Dropdown_SelectBranchFirst"]</option>
                                    </select>
                                    <small class="text-muted">@Localizer["Msg_SelectBranchToSeeHalls"]</small>
                                </div>
                                <div class="col-md-6 mb-3"></div>
                            }
                            else
                            {
                                <input type="hidden" id="hallCode" value="">
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">@Localizer["Label_EducationalYear"]</label>
                                    <select class="form-select" id="eduYearCode">
                                        <option value="">@Localizer["Dropdown_SelectYearOptional"]</option>
                                        @if (ViewData["EduYearCode"] != null)
                                        {
                                            @foreach (var item in (Microsoft.AspNetCore.Mvc.Rendering.SelectList)ViewData["EduYearCode"])
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="col-md-6 mb-3"></div>
                            }
                        </div>

                        <!-- Teacher and Year section - UPDATED LOGIC FOR TEACHER USERS -->
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label">@Localizer["Label_Year"] *</label>
                                <select class="form-select" id="yearCode" required>
                                    <option value="">@Localizer["Dropdown_SelectYear"]</option>
                                    @if (ViewBag.IsTeacher != true)
                                    {
                                        @if (ViewData["YearCode"] != null)
                                        {
                                            @foreach (var item in (Microsoft.AspNetCore.Mvc.Rendering.SelectList)ViewData["YearCode"])
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        }
                                    }
                                </select>
                            </div>

                            @if (ViewBag.IsCenter == true)
                            {
                                <div class="col-md-6 mb-3">
                                    <label class="form-label">@Localizer["Label_Teacher"] *</label>
                                    <select class="form-select" id="teacherCode" required onchange="loadSubjectsForTeacher()">
                                        <option value="">@Localizer["Dropdown_SelectTeacher"]</option>
                                        @if (ViewData["TeacherCode"] != null)
                                        {
                                            @foreach (var item in (Microsoft.AspNetCore.Mvc.Rendering.SelectList)ViewData["TeacherCode"])
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        }
                                        else
                                        {
                                            <option value="">@Localizer["Dropdown_NoTeachers"]</option>
                                        }
                                    </select>
                                </div>
                            }
                            else
                            {
                                <input type="hidden" id="teacherCode" value="">
                                <div class="col-md-6 mb-3"></div>
                            }
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label">@Localizer["Label_Subject"]</label>
                                <select class="form-select" id="subjectCode">
                                    <option value="">@Localizer["Dropdown_SelectSubjectOptional"]</option>
                                </select>
                                @if (ViewBag.IsTeacher == true)
                                {
                                    <small class="text-muted">@Localizer["Msg_SelectYearToSeeSubjects"]</small>
                                }
                                else
                                {
                                    <small class="text-muted">@Localizer["Msg_SubjectsAfterTeacher"]</small>
                                }
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label">@Localizer["Label_Amount"]</label>
                                <input type="number" class="form-control" id="scheduleAmount" step="0.01" min="0" placeholder="0.00">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["Btn_Cancel"]</button>
                    <button type="button" class="btn-modern btn-success" id="saveScheduleBtn">
                        <i class="fas fa-save me-2"></i><span class="btn-text">@Localizer["Btn_SaveSchedule"]</span>
                        <div class="spinner-border spinner-border-sm d-none" role="status">
                            <span class="visually-hidden">@Localizer["Loading"]</span>
                        </div>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Event Details Modal -->
    <div class="modal fade schedule-modal" id="eventDetailsModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="fas fa-info-circle me-2"></i>@Localizer["Title_ScheduleDetails"]
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div id="eventDetailsContent"></div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["Btn_Close"]</button>
                    <button type="button" class="btn-modern btn-info" id="editEventBtn">
                        <i class="fas fa-edit me-2"></i>@Localizer["Btn_Edit"]
                    </button>
                    <button type="button" class="btn-modern btn-danger" id="deleteEventBtn">
                        <i class="fas fa-trash me-2"></i>@Localizer["Btn_Delete"]
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div class="modal fade schedule-modal" id="deleteConfirmModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-danger">
                    <h5 class="modal-title">
                        <i class="fas fa-exclamation-triangle me-2"></i>@Localizer["Title_ConfirmDelete"]
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="delete-warning">
                        <h5><i class="fas fa-exclamation-triangle me-2"></i>@Localizer["Lbl_Warning"]</h5>
                        <p class="mb-0">@Localizer["Msg_DeleteWarning"]</p>
                    </div>
                    <div class="schedule-summary" id="deleteScheduleSummary">
                        <!-- Schedule details will be inserted here -->
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@Localizer["Btn_Cancel"]</button>
                    <button type="button" class="btn-modern btn-danger" id="confirmDeleteBtn">
                        <i class="fas fa-trash me-2"></i>@Localizer["Btn_DeleteSchedule"]
                    </button>
                </div>
            </div>
        </div>
    </div>
}

<div class="toast-container"></div>
@Html.AntiForgeryToken()

<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
<script src="~/js/schedule-common.js"></script>

<script>
    window.selectedBranchCode = null;
    window.selectedTeacherCode = null;
    window.selectedYearCode = null;

    function onBranchFilterChanged() {
        var dropdown = document.getElementById('branchFilter');
        window.selectedBranchCode = dropdown ? dropdown.value : null;
        updateActiveFilters();
        if (window.scheduleManager && typeof window.scheduleManager.loadSchedules === 'function') {
            window.scheduleManager.loadSchedules();
        }
    }

    function onTeacherFilterChanged() {
        var dropdown = document.getElementById('teacherFilter');
        window.selectedTeacherCode = dropdown ? dropdown.value : null;
        updateActiveFilters();
        if (window.scheduleManager && typeof window.scheduleManager.loadSchedules === 'function') {
            window.scheduleManager.loadSchedules();
        }
    }

    function onYearFilterChanged() {
        var dropdown = document.getElementById('yearFilter');
        window.selectedYearCode = dropdown ? dropdown.value : null;
        updateActiveFilters();
        if (window.scheduleManager && typeof window.scheduleManager.loadSchedules === 'function') {
            window.scheduleManager.loadSchedules();
        }
    }

    function clearAllFilters() {
        var branchFilter = document.getElementById('branchFilter');
        var teacherFilter = document.getElementById('teacherFilter');
        var yearFilter = document.getElementById('yearFilter');

        if (branchFilter) branchFilter.value = '';
        if (teacherFilter) teacherFilter.value = '';
        if (yearFilter) yearFilter.value = '';

        window.selectedBranchCode = null;
        window.selectedTeacherCode = null;
        window.selectedYearCode = null;

        updateActiveFilters();

        if (window.scheduleManager && typeof window.scheduleManager.loadSchedules === 'function') {
            window.scheduleManager.loadSchedules();
        }
    }

    function updateActiveFilters() {
        const activeFiltersDisplay = document.getElementById('activeFiltersDisplay');
        const activeFilterTags = document.getElementById('activeFilterTags');

        if (!activeFiltersDisplay || !activeFilterTags) return;

        activeFilterTags.innerHTML = '';

        let hasActiveFilters = false;

        if (window.selectedBranchCode) {
            const branchFilter = document.getElementById('branchFilter');
            const branchText = branchFilter?.selectedOptions[0]?.text || '@Localizer["Lbl_SelectedBranch"]';
            addFilterTag('@Localizer["Label_Branch"]', branchText, 'branchFilter');
            hasActiveFilters = true;
        }

        if (window.selectedTeacherCode) {
            const teacherFilter = document.getElementById('teacherFilter');
            const teacherText = teacherFilter?.selectedOptions[0]?.text || '@Localizer["Lbl_SelectedTeacher"]';
            addFilterTag('@Localizer["Label_Teacher"]', teacherText, 'teacherFilter');
            hasActiveFilters = true;
        }

        if (window.selectedYearCode) {
            const yearFilter = document.getElementById('yearFilter');
            const yearText = yearFilter?.selectedOptions[0]?.text || '@Localizer["Lbl_SelectedYear"]';
            addFilterTag('@Localizer["Label_Year"]', yearText, 'yearFilter');
            hasActiveFilters = true;
        }

        activeFiltersDisplay.style.display = hasActiveFilters ? 'block' : 'none';
    }

    function addFilterTag(label, value, filterId) {
        const activeFilterTags = document.getElementById('activeFilterTags');
        if (!activeFilterTags) return;

        const tag = document.createElement('span');
        tag.className = 'badge bg-primary me-2';
        tag.innerHTML = `
            ${label}: ${value}
            <button type="button" class="btn-close btn-close-white ms-1" style="font-size: 0.6rem;" onclick="clearFilter('${filterId}')"></button>
        `;
        activeFilterTags.appendChild(tag);
    }

    function clearFilter(filterId) {
        const filter = document.getElementById(filterId);
        if (filter) {
            filter.value = '';

            if (filterId === 'branchFilter') onBranchFilterChanged();
            else if (filterId === 'teacherFilter') onTeacherFilterChanged();
            else if (filterId === 'yearFilter') onYearFilterChanged();
        }
    }

    async function loadFilterDropdowns() {
        try {
            const isCenter = @Json.Serialize(ViewBag.IsCenter ?? false);

            if (isCenter) {
                const teachersResponse = await fetch('/Schedule/GetTeachersForCenterUser');
                const teachersData = await teachersResponse.json();

                if (teachersData.success && teachersData.teachers) {
                    const teacherFilter = document.getElementById('teacherFilter');
                    if (teacherFilter) {
                        teacherFilter.innerHTML = '<option value="">@Localizer["Dropdown_AllTeachers"]</option>';

                        teachersData.teachers.forEach(teacher => {
                            const option = document.createElement('option');
                            option.value = teacher.value;
                            option.textContent = teacher.text;
                            teacherFilter.appendChild(option);
                        });
                    }
                }
            } else {
                const teacherFilter = document.getElementById('teacherFilter');
                if (teacherFilter) {
                    const teachersResponse = await fetch('/Schedule/GetTeachersForCenterUser');
                    const teachersData = await teachersResponse.json();

                    if (teachersData.success && teachersData.teachers) {
                        teacherFilter.innerHTML = '<option value="">@Localizer["Dropdown_AllTeachers"]</option>';
                        teachersData.teachers.forEach(teacher => {
                            const option = document.createElement('option');
                            option.value = teacher.value;
                            option.textContent = teacher.text;
                            teacherFilter.appendChild(option);
                        });
                    }
                }
            }

            const yearsResponse = await fetch('/Schedule/GetYearsForFilter');
            const yearsData = await yearsResponse.json();

            if (yearsData.success && yearsData.years) {
                const yearFilter = document.getElementById('yearFilter');
                if (yearFilter) {
                    yearFilter.innerHTML = '<option value="">@Localizer["Dropdown_AllYears"]</option>';

                    yearsData.years.forEach(year => {
                        const option = document.createElement('option');
                        option.value = year.value;
                        option.textContent = year.text;
                        yearFilter.appendChild(option);
                    });
                }
            }

        } catch (error) {
            console.error('Error loading filter dropdowns:', error);
        }
    }

    window.userContext = {
        currentUserRootCode: @Json.Serialize(ViewBag.CurrentUserRootCode),
        userRootName: @Json.Serialize(ViewBag.UserRootName ?? ""),
        isCenter: @Json.Serialize(ViewBag.IsCenter ?? false),
        isTeacher: @Json.Serialize(ViewBag.IsTeacher ?? false),
        branchName: @Json.Serialize(ViewBag.BranchName ?? ""),
        singleCenterCode: @Json.Serialize(ViewBag.SingleCenterCode ?? null),
        groupBranchCode: @Json.Serialize(ViewBag.GroupBranchCode ?? null),
        hasError: @Json.Serialize(ViewBag.Error != null),
        activeEduYearCode: @Json.Serialize(ViewBag.ActiveEduYearCode ?? null)
    };

    document.addEventListener('DOMContentLoaded', function () {
        loadFilterDropdowns();

        setTimeout(() => {
            if (window.scheduleManager) {
                const loader = document.getElementById('initialLoader');
                if (loader) {
                    setTimeout(() => {
                        loader.style.display = 'none';
                    }, 1000);
                }

                if (window.userContext.currentUserRootCode && window.scheduleManager.showToast) {
                    setTimeout(() => {
                        window.scheduleManager.showToast(
                            "@Localizer["Toast_CalendarLoaded"]".replace("{0}", window.userContext.userRootName),
                            'success'
                        );
                    }, 1500);
                }
            }
        }, 100);
    });

    window.refreshSchedules = () => {
        if (window.scheduleManager && window.scheduleManager.loadSchedules) {
            window.scheduleManager.loadSchedules();
        }
    };

    window.addScheduleForDay = (day) => {
        if (window.scheduleManager && window.scheduleManager.addScheduleForDay) {
            window.scheduleManager.addScheduleForDay(day);
        }
    };

    window.showScheduleDetails = (scheduleCode) => {
        if (window.scheduleManager && window.scheduleManager.showScheduleDetails) {
            window.scheduleManager.showScheduleDetails(scheduleCode);
        }
    };
</script>