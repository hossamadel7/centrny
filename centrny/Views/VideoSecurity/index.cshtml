@{
    ViewData["Title"] = "Video Security Test";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <h2>Secure Video Learning System - Test Interface</h2>
            <p class="text-muted">Generate and test secure video access links</p>

            <!-- Alert Messages -->
            <div id="alertContainer"></div>

            <!-- Test Configuration Card -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">Test Configuration</h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="videoId" class="form-label">YouTube Video ID</label>
                                <input type="text" class="form-control" id="videoId"
                                       value="dQw4w9WgXcQ" placeholder="Enter YouTube Video ID">
                                <small class="form-text text-muted">
                                    Extract from YouTube URL: https://www.youtube.com/watch?v=<strong>dQw4w9WgXcQ</strong>
                                </small>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="lessonId" class="form-label">Lesson ID (Optional)</label>
                                <input type="number" class="form-control" id="lessonId"
                                       placeholder="Enter Lesson ID">
                                <small class="form-text text-muted">
                                    Link video to a specific lesson in your system
                                </small>
                            </div>
                        </div>
                    </div>

                    <div class="d-flex gap-2 mb-3">
                        <button type="button" class="btn btn-primary" onclick="generateSecureLink()">
                            Generate Secure Link
                        </button>
                        <button type="button" class="btn btn-secondary" onclick="testCommonVideos()">
                            Random Test Video
                        </button>
                        <button type="button" class="btn btn-info" onclick="clearResults()">
                            Clear Results
                        </button>
                    </div>

                    <!-- Quick Test Buttons -->
                    <div class="btn-group flex-wrap" role="group">
                        <button type="button" class="btn btn-outline-secondary btn-sm"
                                onclick="setTestVideo('dQw4w9WgXcQ')">
                            Rick Roll
                        </button>
                        <button type="button" class="btn btn-outline-secondary btn-sm"
                                onclick="setTestVideo('9bZkp7q19f0')">
                            Gangnam Style
                        </button>
                        <button type="button" class="btn btn-outline-secondary btn-sm"
                                onclick="setTestVideo('kJQP7kiw5Fk')">
                            Despacito
                        </button>
                        <button type="button" class="btn btn-outline-secondary btn-sm"
                                onclick="setTestVideo('fJ9rUzIMcZQ')">
                            Bohemian Rhapsody
                        </button>
                    </div>
                </div>
            </div>

            <!-- Results Section -->
            <div id="resultsSection" style="display: none;">
                <!-- Security Analysis Card -->
                <div class="card mb-4">
                    <div class="card-header bg-success text-white">
                        <h5 class="card-title mb-0">Security Analysis</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="border rounded p-3 text-center">
                                    <h6>Student Authentication</h6>
                                    <span class="badge bg-success" id="studentBadge">Verified</span>
                                    <p class="small mt-1 mb-0" id="studentInfo">Loading...</p>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="border rounded p-3 text-center">
                                    <h6>Token Expiration</h6>
                                    <span class="badge bg-warning" id="expiryBadge">30 Minutes</span>
                                    <p class="small mt-1 mb-0" id="expiryInfo">Loading...</p>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="border rounded p-3 text-center">
                                    <h6>Device Security</h6>
                                    <span class="badge bg-info" id="deviceBadge">Fingerprinted</span>
                                    <p class="small mt-1 mb-0">Device tracking active</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Comparison Card -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="card-title mb-0">Security Comparison</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <h6 class="text-danger">Original YouTube URL (Insecure)</h6>
                                <div class="bg-light p-3 rounded original-url-container">
                                    <code id="originalUrl">Loading...</code>
                                    <br><small class="text-danger">Easily shareable, no protection</small>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <h6 class="text-success">Secure Proxy URL (Protected)</h6>
                                <div class="bg-light p-3 rounded secure-url-container">
                                    <code id="secureUrl" style="word-break: break-all;">Loading...</code>
                                    <br><small class="text-success">Encrypted, authenticated, time-limited</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Hacking Test Instructions -->
                <div class="card mb-4">
                    <div class="card-header bg-warning text-dark">
                        <h5 class="card-title mb-0">Hacking Test Instructions</h5>
                    </div>
                    <div class="card-body">
                        <p><strong>Try these attacks on your secure URL:</strong></p>
                        <div class="row">
                            <div class="col-md-6">
                                <ul>
                                    <li><strong>Token Tampering:</strong> Change characters in the token</li>
                                    <li><strong>Video ID Swapping:</strong> Change the videoId parameter</li>
                                    <li><strong>Time Attack:</strong> Wait 31+ minutes and retry</li>
                                </ul>
                            </div>
                            <div class="col-md-6">
                                <ul>
                                    <li><strong>Device Switch:</strong> Try URL in different browser</li>
                                    <li><strong>URL Decode:</strong> Try to decrypt the token</li>
                                    <li><strong>Parameter Injection:</strong> Add extra parameters</li>
                                </ul>
                            </div>
                        </div>
                        <div class="alert alert-info">
                            <strong>Expected Results:</strong> All attacks should fail with specific error messages
                        </div>
                    </div>
                </div>

                <!-- Test Video Player -->
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">Secure Video Player Test</h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <button type="button" class="btn btn-success" onclick="testSecurePlayer()">
                                Test Secure Player
                            </button>
                            <button type="button" class="btn btn-outline-primary" onclick="openInNewWindow()">
                                Open in New Window
                            </button>
                            <button type="button" class="btn btn-outline-danger" onclick="copyForHacking()">
                                Copy URL for Hacking
                            </button>
                        </div>

                        <div id="videoPlayerContainer" style="min-height: 400px; background: #f8f9fa; border: 1px dashed #dee2e6; display: flex; align-items: center; justify-content: center;">
                            <p class="text-muted">Click "Test Secure Player" to load the protected video</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Loading Spinner -->
            <div id="loadingSpinner" class="text-center" style="display: none;">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <p class="mt-2">Generating secure video link...</p>
            </div>

        </div>
    </div>
</div>

<!-- Scripts -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    let currentSecureUrl = '';
    let currentVideoData = null;

    function showAlert(message, type = 'info') {
        const alertDiv = `
            <div class="alert alert-${type} alert-dismissible fade show" role="alert">
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        `;
        $('#alertContainer').html(alertDiv);
    }

    function setTestVideo(videoId) {
        $('#videoId').val(videoId);
        showAlert(`Test video set: ${videoId}`, 'success');
    }

    function generateSecureLink() {
        const videoId = $('#videoId').val().trim();
        const lessonId = $('#lessonId').val().trim();

        if (!videoId) {
            showAlert('Please enter a YouTube Video ID', 'warning');
            return;
        }

        // Show loading
        $('#loadingSpinner').show();
        $('#resultsSection').hide();

        const requestData = {
            videoId: videoId,
            lessonId: lessonId ? parseInt(lessonId) : null
        };

        $.ajax({
            url: '@Url.Action("GenerateSecureLink", "VideoSecurity")',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(requestData),
            success: function(response) {
                $('#loadingSpinner').hide();

                if (response.success) {
                    currentVideoData = response.data;
                    currentSecureUrl = response.data.secureProxyUrl;
                    displayResults(response.data);
                    showAlert('Secure link generated successfully!', 'success');
                } else {
                    showAlert(`Error: ${response.message}`, 'danger');
                }
            },
            error: function(xhr, status, error) {
                $('#loadingSpinner').hide();
                console.error('Ajax error:', error);
                showAlert('Failed to generate secure link. Check console for details.', 'danger');
            }
        });
    }

    function displayResults(data) {
        // Update security analysis
        $('#studentBadge').text('Verified');
        $('#studentInfo').text(data.studentName + ' - ' + data.branchName);
        $('#expiryBadge').text(data.expiresIn);
        $('#expiryInfo').text('Expires: ' + new Date(data.expiresAt).toLocaleString());

        // Update comparison URLs
        $('#originalUrl').text(data.youtubeUrl);
        $('#secureUrl').text(data.secureProxyUrl);

        // Show results section
        $('#resultsSection').show();

        // Scroll to results
        $('html, body').animate({
            scrollTop: $("#resultsSection").offset().top
        }, 1000);
    }

    function testSecurePlayer() {
        if (!currentSecureUrl) {
            showAlert('Please generate a secure link first', 'warning');
            return;
        }

        const iframe = `
            <iframe src="${currentSecureUrl}"
                    width="100%"
                    height="400"
                    frameborder="0"
                    allowfullscreen>
            </iframe>
        `;

        $('#videoPlayerContainer').html(iframe);
    }

    function openInNewWindow() {
        if (!currentSecureUrl) {
            showAlert('Please generate a secure link first', 'warning');
            return;
        }

        window.open(currentSecureUrl, '_blank', 'width=800,height=600');
    }

    function copyForHacking() {
        if (!currentSecureUrl) {
            showAlert('Please generate a secure link first', 'warning');
            return;
        }

        navigator.clipboard.writeText(currentSecureUrl).then(function() {
            showAlert('Secure URL copied to clipboard! Now try hacking it in another browser tab.', 'info');
        });
    }

    function testCommonVideos() {
        const videos = [
            { id: 'dQw4w9WgXcQ', name: 'Rick Astley - Never Gonna Give You Up' },
            { id: '9bZkp7q19f0', name: 'PSY - Gangnam Style' },
            { id: 'kJQP7kiw5Fk', name: 'Luis Fonsi - Despacito' },
            { id: 'fJ9rUzIMcZQ', name: 'Queen - Bohemian Rhapsody' }
        ];

        const randomVideo = videos[Math.floor(Math.random() * videos.length)];
        $('#videoId').val(randomVideo.id);
        showAlert(`Set random test video: ${randomVideo.name}`, 'info');
    }

    function clearResults() {
        $('#resultsSection').hide();
        $('#videoPlayerContainer').html('<p class="text-muted">Click "Test Secure Player" to load the protected video</p>');
        $('#alertContainer').empty();
        currentSecureUrl = '';
        currentVideoData = null;
        showAlert('Results cleared', 'secondary');
    }

    // Auto-focus on video ID input
    $(document).ready(function() {
        $('#videoId').focus();

        // Enable enter key to generate link
        $('#videoId, #lessonId').keypress(function(e) {
            if (e.which === 13) {
                generateSecureLink();
            }
        });
    });
</script>

<style>
    .card {
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        border: 1px solid rgba(0, 0, 0, 0.125);
    }

    .card-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid rgba(0, 0, 0, 0.125);
    }

    .bg-success .card-title {
        color: white !important;
    }

    code {
        background-color: #f1f3f4;
        padding: 2px 4px;
        border-radius: 3px;
        font-family: 'Courier New', monospace;
        font-size: 0.9em;
    }

    .border {
        transition: all 0.3s ease;
    }

        .border:hover {
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            transform: translateY(-2px);
        }

    .btn-group .btn {
        margin-right: 5px;
    }

    #videoPlayerContainer iframe {
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .alert {
        border-radius: 8px;
    }

    .spinner-border {
        width: 3rem;
        height: 3rem;
    }

    .badge {
        font-size: 0.8em;
        padding: 0.5em 0.8em;
    }

    @@media (max-width: 768px) {
        .btn-group

    {
        flex-direction: column;
    }

    .btn-group .btn {
        margin-bottom: 5px;
        margin-right: 0;
    }

    .card-body .row > div {
        margin-bottom: 1rem;
    }

    }

    #resultsSection {
        animation: slideIn 0.5s ease-out;
    }

    @@keyframes slideIn {
        from

    {
        opacity: 0;
        transform: translateY(20px);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }

    }

    .secure-url-container {
        background: linear-gradient(135deg, #e8f5e8 0%, #f0f8f0 100%);
        border: 1px solid #28a745;
    }

    .original-url-container {
        background: linear-gradient(135deg, #ffeaea 0%, #fff5f5 100%);
        border: 1px solid #dc3545;
    }
</style>