@using centrny.Controllers
@model StudentSearchViewModel

@{
    ViewData["Title"] = "Find Your Profile";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - @Model.RootName</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />
    <style>
        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .search-container {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .search-card {
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            max-width: 800px;
            width: 100%;
        }

        .search-header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            text-align: center;
            padding: 40px 30px;
        }

        .search-header h1 {
            margin: 0;
            font-size: 2rem;
            font-weight: 600;
        }

        .search-header p {
            margin: 10px 0 0 0;
            opacity: 0.9;
            font-size: 1.1rem;
        }

        .item-key-display {
            background: rgba(255, 255, 255, 0.2);
            border-radius: 10px;
            padding: 10px 15px;
            margin-top: 20px;
            font-weight: 600;
        }

        .search-body {
            padding: 40px 30px;
        }

        .search-section {
            background: #f8f9fa;
            border-radius: 15px;
            padding: 30px;
            margin-bottom: 30px;
        }

        .form-label {
            font-weight: 600;
            color: #333;
            margin-bottom: 8px;
        }

        .form-control {
            border: 2px solid #e1e5e9;
            border-radius: 10px;
            padding: 12px 15px;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .form-control:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.25);
        }

        .btn-primary {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            border-radius: 10px;
            padding: 12px 25px;
            font-size: 1rem;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 15px rgba(102, 126, 234, 0.3);
        }

        .btn-success {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
            border: none;
            border-radius: 8px;
            padding: 8px 15px;
            font-size: 0.9rem;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .btn-success:hover {
            transform: translateY(-1px);
            box-shadow: 0 5px 10px rgba(40, 167, 69, 0.3);
        }

        .btn-outline-primary {
            border: 2px solid #667eea;
            border-radius: 10px;
            padding: 12px 25px;
            font-size: 1rem;
            font-weight: 600;
            color: #667eea;
        }

        .student-card {
            background: white;
            border: 2px solid #e1e5e9;
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 15px;
            transition: all 0.3s ease;
        }

        .student-card:hover {
            border-color: #667eea;
            transform: translateY(-2px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
        }

        .student-info {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin-bottom: 15px;
        }

        .info-item {
            display: flex;
            flex-direction: column;
        }

        .info-label {
            font-size: 0.85rem;
            font-weight: 600;
            color: #6c757d;
            margin-bottom: 3px;
        }

        .info-value {
            font-size: 1rem;
            color: #495057;
            font-weight: 500;
        }

        .alert {
            border-radius: 10px;
            border: none;
        }

        .spinner-border-sm {
            width: 1rem;
            height: 1rem;
        }

        .instructions {
            background: #e7f3ff;
            border-left: 4px solid #007bff;
            padding: 20px;
            margin-bottom: 30px;
            border-radius: 0 10px 10px 0;
        }

        .instructions h5 {
            color: #007bff;
            margin-bottom: 15px;
        }

        .instructions ul {
            margin: 0;
            padding-left: 20px;
        }

        .instructions li {
            margin-bottom: 8px;
            color: #495057;
        }

        .no-results {
            text-align: center;
            padding: 40px 20px;
            color: #6c757d;
        }

        .no-results i {
            font-size: 3rem;
            margin-bottom: 20px;
            opacity: 0.5;
        }

        #loadingSpinner {
            display: none;
        }

        .search-method-indicator {
            margin-bottom: 10px;
            padding: 5px 8px;
            background: #e8f5e8;
            border-radius: 4px;
            border-left: 3px solid #28a745;
        }

        .search-method-indicator small {
            font-size: 0.8rem;
            color: #155724 !important;
        }
    </style>
</head>

<body>
    <div class="search-container">
        <div class="search-card">
            <!-- Header -->
            <div class="search-header">
                <i class="fas fa-search fa-3x mb-3"></i>
                <h1>Find Your Profile</h1>
                <p>Link your existing student profile to access your account</p>
                <div class="item-key-display">
                    Access Key: @Model.ItemKey
                </div>
            </div>

            <!-- Body -->
            <div class="search-body">
                
                <!-- Instructions -->
                <div class="instructions">
                    <h5><i class="fas fa-info-circle me-2"></i>How to Link Your Profile</h5>
                    <ul>
                        <li>Enter the phone number you used during registration</li>
                        <li>We'll search for your existing profile in @Model.RootName</li>
                        <li>Select your profile from the results</li>
                        <li>Complete your academic enrollment (subjects, schedules, etc.)</li>
                    </ul>
                </div>

                <!-- Search Form -->
                <div class="search-section">
                    <h5 class="mb-3"><i class="fas fa-phone me-2"></i>Enter Your Phone Number</h5>
                    <form id="searchForm">
                        <div class="row align-items-end">
                            <div class="col-md-8">
                                <label class="form-label" for="studentPhone">
                                    Phone Number <span class="text-danger">*</span>
                                </label>
                                <input type="tel" class="form-control" id="studentPhone" 
                                       placeholder="Enter your phone number" required maxlength="20">
                                <div class="invalid-feedback"></div>
                            </div>
                            <div class="col-md-4">
                                <button type="submit" class="btn btn-primary w-100" id="searchBtn">
                                    <i class="fas fa-search me-2"></i>Search
                                </button>
                            </div>
                        </div>
                    </form>
                </div>

                <!-- Loading Spinner -->
                <div id="loadingSpinner" class="text-center py-4">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Searching...</span>
                    </div>
                    <p class="mt-2 mb-0">Searching for your profile...</p>
                </div>

                <!-- Error Message -->
                <div id="errorMessage" class="alert alert-danger" style="display: none;">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <span id="errorText"></span>
                </div>

                <!-- Search Results -->
                <div id="searchResults" style="display: none;">
                    <h5 class="mb-3"><i class="fas fa-user-check me-2"></i>Found Profiles</h5>
                    <div id="studentsList"></div>
                </div>

                <!-- No Results -->
                <div id="noResults" style="display: none;">
                    <div class="no-results">
                        <i class="fas fa-user-slash"></i>
                        <h5>No Profile Found</h5>
                        <p>We couldn't find a student profile with that phone number.</p>
                        <div class="mt-3">
                            <a href="/Register/@Model.RootCode" class="btn btn-outline-primary">
                                <i class="fas fa-user-plus me-2"></i>Create New Profile
                            </a>
                        </div>
                    </div>
                </div>

                <!-- Alternative Action -->
                <div class="text-center mt-4">
                    <small class="text-muted">
                        Don't have a profile yet? 
                        <a href="/Register/@Model.RootCode" class="text-decoration-none">
                            <i class="fas fa-user-plus me-1"></i>Create one here
                        </a>
                    </small>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        const itemKey = '@Model.ItemKey';
        
        document.getElementById('searchForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            await searchStudents();
        });

        async function searchStudents() {
            const phoneInput = document.getElementById('studentPhone');
            const phone = phoneInput.value.trim();
            
            if (!phone) {
                showError('Please enter a phone number.');
                return;
            }

            // Show loading
            showLoading(true);
            hideMessages();

            try {
                const response = await fetch('/Student/SearchByPhone', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        ItemKey: itemKey,
                        StudentPhone: phone
                    })
                });

                const result = await response.json();

                if (result.success) {
                    if (result.students && result.students.length > 0) {
                        showStudents(result.students);
                    } else {
                        showNoResults();
                    }
                } else {
                    let errorMessage = result.error || 'Search failed. Please try again.';
                    
                    // If development details are available, show them
                    if (result.details) {
                        console.group('Development Error Details');
                        console.error('Error Type:', result.details.type);
                        console.error('Message:', result.details.message);
                        console.error('Stack Trace:', result.details.stackTrace);
                        if (result.details.innerException) {
                            console.error('Inner Exception:', result.details.innerException);
                        }
                        console.groupEnd();
                        
                        errorMessage += ` (${result.details.type}: ${result.details.message})`;
                    }
                    
                    showError(errorMessage);
                }
            } catch (error) {
                console.error('Search error:', error);
                showError('An error occurred while searching. Please try again.');
            } finally {
                showLoading(false);
            }
        }

        function showStudents(students) {
            const container = document.getElementById('studentsList');
            container.innerHTML = '';

            students.forEach(student => {
                const studentCard = createStudentCard(student);
                container.appendChild(studentCard);
            });

            document.getElementById('searchResults').style.display = 'block';
        }

        function createStudentCard(student) {
            const card = document.createElement('div');
            card.className = 'student-card';
            
            // Add search method indicator if available
            const searchMethodHtml = student.SearchMethod ? 
                `<div class="search-method-indicator">
                    <small class="text-muted"><i class="fas fa-search me-1"></i>Found via: ${student.SearchMethod}</small>
                </div>` : '';
            
            card.innerHTML = `
                <div class="student-info">
                    ${searchMethodHtml}
                    <div class="info-item">
                        <span class="info-label">Name</span>
                        <span class="info-value">${student.StudentName}</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Phone</span>
                        <span class="info-value">${student.StudentPhone}</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Parent Phone</span>
                        <span class="info-value">${student.StudentParentPhone}</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Birth Date</span>
                        <span class="info-value">${student.BirthDate} (Age: ${student.Age})</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Gender</span>
                        <span class="info-value">${student.Gender}</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Branch</span>
                        <span class="info-value">${student.BranchName}</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Year/Level</span>
                        <span class="info-value">${student.YearName}</span>
                    </div>
                    <div class="info-item">
                        <span class="info-label">Registration Date</span>
                        <span class="info-value">${student.SubscriptionDate}</span>
                    </div>
                </div>
                <div class="text-end">
                    <button type="button" class="btn btn-success" onclick="linkStudent(${student.StudentCode}, '${student.StudentName}')">
                        <i class="fas fa-link me-2"></i>Link This Profile
                    </button>
                </div>
            `;

            return card;
        }

        async function linkStudent(studentCode, studentName) {
            if (!confirm(`Are you sure you want to link the profile for "${studentName}"?`)) {
                return;
            }

            try {
                showLoading(true);
                hideMessages();

                const response = await fetch('/Student/LinkStudent', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        ItemKey: itemKey,
                        StudentCode: studentCode
                    })
                });

                const result = await response.json();

                if (result.success) {
                    // Show success message and redirect
                    alert(result.message);
                    window.location.href = result.redirectUrl;
                } else {
                    showError(result.error || 'Failed to link student profile.');
                }
            } catch (error) {
                console.error('Link error:', error);
                showError('An error occurred while linking the profile.');
            } finally {
                showLoading(false);
            }
        }

        function showLoading(show) {
            document.getElementById('loadingSpinner').style.display = show ? 'block' : 'none';
            document.getElementById('searchBtn').disabled = show;
            
            if (show) {
                document.getElementById('searchBtn').innerHTML = '<span class="spinner-border spinner-border-sm me-2"></span>Searching...';
            } else {
                document.getElementById('searchBtn').innerHTML = '<i class="fas fa-search me-2"></i>Search';
            }
        }

        function showError(message) {
            document.getElementById('errorText').textContent = message;
            document.getElementById('errorMessage').style.display = 'block';
        }

        function showNoResults() {
            document.getElementById('noResults').style.display = 'block';
        }

        function hideMessages() {
            document.getElementById('errorMessage').style.display = 'none';
            document.getElementById('searchResults').style.display = 'none';
            document.getElementById('noResults').style.display = 'none';
        }
    </script>
</body>
</html>